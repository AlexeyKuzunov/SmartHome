# MiniRBoard build property overrides
#
//Вычисляет все данные и заполняет массив значений датчиков
byte CalculateAllData() {
	MySensors[0].Status = 1;
	MySensors[0].Value = Get_18B20_Data();
	MySensors[1].Status = 1;
	MySensors[1].Value = stateRelay;
	//Serial.print(MySensors[2].Value);
	return 1;
}

void check_radio() { // обработчик прерывания
	bool tx, fail, rx;
	radio.whatHappened(tx, fail, rx); // читаем регистр
	flag_tx = tx; // 1 если успешно отправили данные
	flag_fail = fail; // 1 если данные не отправленны   
	flag_rx = rx;  // 1 если пришли данные для чтения 
	Serial.println(rx);
}

AS_Answer ExecuteCommand(AS_Command MyCommand) {
	AS_Answer  MyAnswer;  // Ответ
	MyAnswer.Status = 0;
	MyAnswer.Value = 0;
	if (id == MyCommand.Id) {
		MyAnswer.Id = IDCLIENT;
		switch (MyCommand.Command) {
		case 1: //Получить количество датчиков
			MyAnswer.Status = 1;
			MyAnswer.Value = NUMSENSORS;
			MyAnswer.Count = errorstate;
			memcpy(&MyAnswer.Comment, &"Sun sensors.", COMMENTLEN);
			//Serial.println("1.");
			break;
		case 2: //Рассчитать все значения датчиков
			MyAnswer.Status = CalculateAllData();
			MyAnswer.Count = errorstate;
			///Serial.println("2.");
			break;
		case 3:
			Switch();
			MyAnswer.Status = 1;
			MyAnswer.Value = stateRelay;
			MyAnswer.Count = errorstate;
			break;
		case 4: //Получиь значение датчика по номеру
				//Serial.println("4.");
			if ((MyCommand.Parametr + 1) > NUMSENSORS) {
				MyAnswer.Status = 0;
				MyAnswer.Value = 0;
				MyAnswer.Count = errorstate;
				memcpy(&MyAnswer.Comment, &"Too big num par.", COMMENTLEN);
			}
			else {
				MyAnswer.Status = MySensors[MyCommand.Parametr].Status;
				MyAnswer.Value = MySensors[MyCommand.Parametr].Value;
				MyAnswer.Count = errorstate;
				memcpy(&MyAnswer.Comment, &MySensors[MyCommand.Parametr].Comment, COMMENTLEN);
				//MyAnswer.Comment[0] = P[0];
			}
			break;
		}
	}
	return MyAnswer;
}

/*	AS_Answer MyAnswer;
	AS_Command MyCommand;
//	CalculateAllData();
	//Serial.println(flag_rx);
//	if (flag_rx) { // если пришли данные для чтения
	if(radio.available())
	{
		int len = radio.getDynamicPayloadSize();
		radio.read(&MyCommand, len);
		
		Serial.print("id: ");
		Serial.println(MyCommand.Id);
		Serial.print("Command: ");
		Serial.println(MyCommand.Command);
		Serial.print("Parametr: ");
		Serial.println(MyCommand.Parametr);

		MyAnswer = ExecuteCommand(command);
		
		Serial.print("id: ");
		Serial.println(MyAnswer.Id);
		Serial.print("Status: ");
		Serial.println(MyAnswer.Status);
		Serial.print("Count: ");
		Serial.println(MyAnswer.Count);
		Serial.print("Value: ");
		Serial.println(MyAnswer.Value);
		Serial.print("Comment: ");
		Serial.println(MyAnswer.Comment);
		Serial.print("Sizeof_Answer: ");
		Serial.println(sizeof(MyAnswer));
		
		radio.stopListening();		
		radio.write(&MyAnswer, sizeof(MyAnswer));
		radio.startListening();


		flag_rx = 0;
		//Serial.println(command.id);
	}
	if (flag_fail) { // если данные не отправленны
		flag_fail = 0;
		errorstate++;
	}

	if (flag_tx) { // если данные отправленны 
		flag_tx = 0;

	}
*/
